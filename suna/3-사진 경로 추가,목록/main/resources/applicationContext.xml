<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="com.web.rnb"></context:component-scan>
	
	<!-- DataSource -->
	<context:property-placeholder location="classpath:config/database.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>


	
	<!-- SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:sql-map-config.xml"/>
	</bean>
	<!-- SqlSessionTemplate -->
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	<!-- aop -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 트랜잭션 설정정보를 위한 어노테이션을 사용할수있는 설정 -->
	<tx:annotation-driven transaction-manager="txManager"/> <!-- transactionManager 라는 이름이면 생략가능 하다. -->
	<!-- Transaction Manager -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- txManager Advice TransactionInterceptor 빈이 등록된다. @Transaction을 사용하면 밑에와 그밑의 설정은 필요없다.-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/><!-- 조회기능을 읽기전용으로 설정하면 성능향상에 도움이 된다. -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/> <!-- propagation:트랜잭션전파규칙 required:트랜잭션필요/트랜잭션이 이미존재하면 그것을사용하고 아니면 새로생성 -->
		</tx:attributes>	     <!-- 전파규칙이 required는 생략가능 -->                  <!-- Exception타입의 예외가 발생하면 롤백한다. -->  
	</tx:advice>
	<!-- txManagerAdvice aop 트랜잭션을 설정할 클래스의 모든 메소드를 트랜잭션 대상으로 선택하는 것이 좋다.-->
	<aop:config>
		<aop:pointcut expression="execution(* com.web.rnb..*(..))" id="txPointCut"/> <!-- "bean(*Service)" 이런식으로 빈은 대상으로 포인트컷을 지정해도된다. -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	
	<!-- MultiPartFile 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   		<property name="maxUploadSize" value="100000000"/>
   		<property name="maxInMemorySize" value="100000000"/>
   		<!-- <property name="uploadTempDir" ref="fileSystemResource"/> -->
   </bean>
	<!-- 메일보내기 -->
   <!-- <bean id="mailSender" class = "org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.naver.com" />
      <property name="port" value="587" />
      <property name="username" value="1223yys" />
      <property name="password" value="akqjq159" />
      <property name="javaMailProperties">
         <props>
               <prop key="mail.transport.protocol">smtp</prop>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
         </props>
      </property>
   </bean> -->
</beans>
